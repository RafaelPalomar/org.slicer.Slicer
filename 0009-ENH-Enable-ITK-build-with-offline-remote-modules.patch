From 4617afab795fba5dbd61b196dea944e501271aee Mon Sep 17 00:00:00 2001
From: Rafael Palomar <rafael.palomar@ous-research.no>
Date: Tue, 25 Apr 2023 06:30:19 +0200
Subject: [PATCH 9/9] ENH: Enable ITK build with offline remote modules

---
 SuperBuild/External_ITK.cmake | 30 ++++++++++++++++++++++++++++--
 1 file changed, 28 insertions(+), 2 deletions(-)

diff --git a/SuperBuild/External_ITK.cmake b/SuperBuild/External_ITK.cmake
index ec4c09bf5d..fb4bee6dc3 100644
--- a/SuperBuild/External_ITK.cmake
+++ b/SuperBuild/External_ITK.cmake
@@ -103,7 +103,6 @@ if(NOT DEFINED ITK_DIR AND NOT Slicer_USE_SYSTEM_${proj})
     -DModule_ITKDeprecated:BOOL=ON #<-- Needed for ITKv5 now. (itkMultiThreader.h and MutexLock backwards compatibility.)
     )
 
-
   #Add additional user specified modules from this variable
   #Slicer_ITK_ADDITIONAL_MODULES
   #Add -DModule_${module} for each listed module
@@ -116,7 +115,6 @@ if(NOT DEFINED ITK_DIR AND NOT Slicer_USE_SYSTEM_${proj})
     endforeach()
   endif()
 
-
   ExternalProject_Add(${proj}
     ${${proj}_EP_ARGS}
     GIT_REPOSITORY "${Slicer_${proj}_GIT_REPOSITORY}"
@@ -135,6 +133,7 @@ if(NOT DEFINED ITK_DIR AND NOT Slicer_USE_SYSTEM_${proj})
       -DITK_C_OPTIMIZATION_FLAGS:STRING=  # Force compiler-default instruction set to ensure compatibility with older CPUs
       -DITK_INSTALL_ARCHIVE_DIR:PATH=${Slicer_INSTALL_LIB_DIR}
       -DITK_INSTALL_LIBRARY_DIR:PATH=${Slicer_INSTALL_LIB_DIR}
+      -DITK_FORBID_DOWNLOADS:BOOL=ON
       -DBUILD_TESTING:BOOL=OFF
       -DBUILD_EXAMPLES:BOOL=OFF
       -DITK_BUILD_DEFAULT_MODULES:BOOL=ON
@@ -172,6 +171,33 @@ if(NOT DEFINED ITK_DIR AND NOT Slicer_USE_SYSTEM_${proj})
       ${${proj}_DEPENDENCIES}
     )
 
+ # Add custom command to copy ITK remote modules
+  if(DEFINED ITK_REMOTE_MODULES_DIR)
+    file(GLOB ITK_REMOTE_MODULE_DIRS "${ITK_REMOTE_MODULES_DIR}/*.remote.git")
+
+    set(ITK_REMOTE_COPY_COMMANDS)
+    foreach(remote_module_dir ${ITK_REMOTE_MODULE_DIRS})
+      get_filename_component(remote_module_name_raw ${remote_module_dir} NAME_WE)
+      string(REPLACE "ITK-Remote-" "" remote_module_name ${remote_module_name_raw})
+      set(remote_module_copy_dest "${EP_BINARY_DIR}/Modules/Remote/${remote_module_name}")
+      list(APPEND ITK_REMOTE_COPY_COMMANDS
+        COMMAND ${CMAKE_COMMAND} -E copy_directory ${remote_module_dir} ${remote_module_copy_dest}
+      )
+    endforeach()
+
+    add_custom_command(
+      OUTPUT ITKRemoteModulesCopies
+      DEPENDS ${${proj}_DEPENDENCIES}
+      ${ITK_REMOTE_COPY_COMMANDS}
+      COMMENT "Copying ITK remote modules"
+    )
+
+    add_custom_target(ITKRemoteModulesCopiesTarget DEPENDS ITKRemoteModulesCopies)
+
+    # Add dependency on ITKRemoteModulesCopiesTarget to the update step of the project
+    ExternalProject_Add_StepDependencies(${proj} update ITKRemoteModulesCopiesTarget)
+  endif()
+
   ExternalProject_GenerateProjectDescription_Step(${proj})
 
   set(ITK_DIR ${EP_BINARY_DIR})
-- 
2.39.2

